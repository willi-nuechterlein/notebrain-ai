// Generated by Xata Codegen 0.22.3. Please do not edit.
import { buildClient } from '@xata.io/client'
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord
} from '@xata.io/client'

const tables = [
  {
    name: 'dialogues',
    columns: [
      { name: 'user_id', type: 'int' },
      { name: 'speaker', type: 'multiple' },
      { name: 'text', type: 'string' },
      { name: 'created_at', type: 'datetime' }
    ]
  }
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Dialogues = InferredTypes['dialogues']
export type DialoguesRecord = Dialogues & XataRecord

export type DatabaseSchema = {
  dialogues: DialoguesRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL:
    'https://Willi-N-chterlein-s-workspace-e2nnp6.eu-west-1.xata.sh/db/db1',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
